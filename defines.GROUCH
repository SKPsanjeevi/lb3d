# Top lines are added by configLB3D.sh, defining compilerflags as well as the full path to XDRLIB
#
# Stuff that is not required to make lbe but perhaps for other things...
ARCH	= LINUX
NBIT	= 64

F90     = /data/modules/MPI/gcc/5.2/openmpi/1.10/hdf5/1.8.15/bin/h5pfc
FC	= $(F90)

CC     = /data/modules/MPI/gcc/5.2/openmpi/1.10/hdf5/1.8.15/bin/h5pcc

AR      = ar

LD	= $(F90)

LIBDIRS	= $(XDRLIB)
INCDIRS	=

# HDF
H5FLAGS	= -lhdf5_fortran -lhdf5

# XDRF
XDRFLAGS= -lxdrf

# MPI
MPIFLAGS=

# (S)ZIP
ZIPFLAGS=

# LB3D defaults.
DEFFLAGS= -DUSEXDRF -DUSEHDF
# Platform-related flags.
PFLAGS  = 

# Best settings for the Core2Duo CPUs:
OPTFLAGS= -mcmodel=large -ffree-line-length-256 -O3 -msse3
FFLAGS	= $(OPTFLAGS) $(LIBDIRS) $(INCDIRS) $(ZIPFLAGS) $(MPIFLAGS) $(XDRFLAGS) $(H5FLAGS) $(PFLAGS) $(DEFFLAGS) $(MAKEFFLAGS)

# -mcmodel=large required for larger memory request: medium <= 2GB, large = no restriction
# -ffree-line-length-256: default of 132 not long enough and gives errors with line continuation and truncation
# -msse3 enables streaming SIMD extensions (SSE) for floating-point intesive computing tasks on x86 and x86-64 architectures
# -O3 optimises even more than -O2 :-) https://gcc.gnu.org/onlinedocs/gcc/Optimize-Options.html 
# 		when this is omitted causes errors in deallocation in (at least) IBM modules

# FFTWFLAGS is prepended by configLB3D.sh if the -DP3M flag is set.
LDFLAGS	= $(LIBDIRS) $(XDRFLAGS) $(MPIFLAGS) $(H5FLAGS) $(ZIPFLAGS) $(FFTWFLAGS)

CLIBS 	= $(LIBDIRS) $(INCDIRS) $(ZIPFLAGS) $(MPIFLAGS) $(XDRFLAGS) $(H5FLAGS)

CFLAGS  = $(FFLAGS)

TMPFILES=*.mod *.d work.pc*

# remember: only CPPDEFS,CPPFLAGS,FC,FFLAGS,LD,LDFLAGS,OTHERFLAGS,TMPFILES
# are actually read in the rules to make lbe generated by mkmf.pl

