AC_INIT(vol3d.c)
AC_CONFIG_HEADERS([config.h])
AC_CANONICAL_TARGET



dnl Try for vendor cc if possible

ALTCC="cc gcc"
case "$target" in
	i?86-pc-linux*)	:
		ALTCC="icc cc gcc" ;;
	mips-sgi-irix*) :
		ALTCC="cc gcc";;
	ia64-*) :
		ALTCC="ecc gcc3 gcc"
                LDFLAGS="$LDFLAGS -L/usr/X11R6/lib64"
                ;;
        x86_64-*):
		ALTCC="gcc"
                LDFLAGS="$LDFLAGS -L/usr/X11R6/lib64"
                ;;
esac


case "$target" in
        *-apple-darwin*):
                DARWIN="yes";;
esac

AC_ARG_ENABLE(optimize,
[  --enable-optimize	Optimize if compiler recognized (default)],
	[if test "x$enableval" = xyes; then
		try_to_optimize=yes
	else
		try_to_optimize=no
	fi
	] ,
	try_to_optimize=yes
)
if test "x$try_to_optimize" = xyes; then
	dnl Define CFLAGS, so that AC_PROG_CC doesn't pass -g to gcc.
	CFLAGS="$CFLAGS "
fi

AC_PROG_CC([$ALTCC])


dnl Try to optimize if we can

cando_gcc_opt="no"
cando_irix_opt="no"
if test "x$try_to_optimize" =  xyes; then
	case "$CC" in
		gcc*) :
			CFLAGS="$CFLAGS -O3 -fomit-frame-pointer"
			cando_gcc_opt="yes"
		;;
		cc*):
			case "$host" in
				mips-sgi-irix*) :
                                # -woff 3201,1552 = suppress annoying
                                # "set but never used" warnings
                                # (since it doesn't look inside ifdefs)
					CFLAGS="$CFLAGS -Ofast -woff 3201,1552"
				cando_irix_opt="yes"
				;;
			esac
                        if test "x$ac_compiler_gnu" = xyes; then
                                CFLAGS="$CFLAGS -O3 -fomit-frame-pointer"
                                cando_gcc_opt="yes"
                        fi

		;;
		ecc*):
			CFLAGS="$CFLAGS -O3 -ipo -ipo_obj -fno-alias -fno-fnalias"
		;;
	esac
fi


dnl Be picky if we're allowed to be so.

if test "x$ac_compiler_gnu" = xyes; then
        CFLAGS="$CFLAGS -Wall -pedantic"
else
        case "$CC" in
                gcc*) :
                ;;
                cc*):
                        case "$host" in
                                mips-sgi-irix*) :
                                        CFLAGS="$CFLAGS -fullwarn"
                                ;;
                        esac
                ;;
                ecc*):
                        CFLAGS="$CFLAGS -Wall"
                ;;
        esac
fi

dnl Some platform-specific quirks

case "$host" in
	mips-sgi-irix*) :
                # We'd like 64-bit everything, please.
		CFLAGS="$CFLAGS -64"
	;;
esac


AC_HEADER_STDC
AC_TYPE_PID_T
AC_TYPE_SIZE_T


dnl NB "includes" parameter set to - to make sure only preprocessor
dnl checked, since SGI MIPSPRO compiler barfs without further includes.
dnl May change in future autoconfs.

AC_CHECK_HEADER(rpc/rpc.h,,,[-])
AC_CHECK_HEADER(rpc/xdr.h,,,[-])

AC_CHECK_HEADERS(setjmp.h)

if test "x$ac_cv_header_setjmp_h" = xyes; then
	AC_CHECK_FUNCS(setjmp)
fi



dnl Ensure XDR functions available
AC_SEARCH_LIBS(xdr_double, nsl sun rpclib,,
	AC_MSG_ERROR([No xdr_double available])
)

dnl This might fuck up for different versions of autoconf.
if test "x$ac_cv_search_xdr_double" = "xnone required"; then
	XDRLIBS=""
else
	XDRLIBS="$ac_cv_search_xdr_double"
fi

AC_SUBST(XDRLIBS)



dnl Check for standard math libraries
MATHLIBS=""
AC_CHECK_LIB(m,exp,
	MATHLIBS="-lm",
	AC_MSG_ERROR([No math library found])
)
AC_SUBST(MATHLIBS)



dnl ---------------- Checks for libraries -------------------

dnl FFTW

# Default is to look for fftw even if not told to.

FFTW_PREFIX=""
FFTW_LDFLAGS=""
FFTW_CFLAGS=""
want_fftw="yes"
have_fftw="no"

AC_ARG_WITH(fftw,
[  --with-fftw=<path>       Enable FFT features],
[
        if test "x$withval" = xno; then
                # --without-fftw
                want_fftw="no"
        else
                if test "x$withval" = xyes; then
                        # --with-fftw specified, no argument; 
                        # default behaviour anyway.
                        want_fftw="yes"
                else
                        # --with-fftw=<prefix>
                        FFTW_PREFIX="$withval"
                        FFTW_LDFLAGS="-L$withval/lib"
                        FFTW_CFLAGS="-I$withval/include"
                        want_fftw="yes"
                fi
        fi
])

if test "x$want_fftw" = xyes; then
CFLAGS_SAVE="$CFLAGS"
LDFLAGS_SAVE="$LDFLAGS"
LIBS_SAVE="$LIBS"

CFLAGS="$CFLAGS $FFTW_CFLAGS"
LDFLAGS="$LDFLAGS $FFTW_LDFLAGS"

        AC_SEARCH_LIBS(fftwf_execute,fftw3f,
                [
                 FFTW_LIBS="-lfftw3f"
                 have_fftw="yes"
                 AC_DEFINE(HAVE_FFTW)
                ],
                [
                 have_fftw="no"
                        FFTW_LIBS=""
                        FFTW_PREFIX=""
                        FFTW_LDFLAGS=""
                        FFTW_CFLAGS=""
                 ]
        )

CFLAGS="$CFLAGS_SAVE"
LDFLAGS="$LDFLAGS_SAVE"
LIBS="$LIBS_SAVE"
fi
AC_SUBST(FFTW_LIBS)
AC_SUBST(FFTW_CFLAGS)
AC_SUBST(FFTW_LDFLAGS)

dnl ------------- HDF5 -----------


HDF5_PREFIX=""
HDF5_LDFLAGS=""
HDF5_CFLAGS=""

want_hdf5="yes"
have_hdf5="no"

AC_ARG_WITH(hdf5,
[  --with-hdf5=<path>       Enable HDf5 support],
[
        if test "x$withval" = xno; then
                # --without-hdf5
                want_hdf5="no"
        else
                if test "x$withval" = xyes; then
                     # --with-hdf5 specified, no argument; 
                     # default behaviour anyway.
                     want_hdf5="yes"
                else
                     # --with-hdf5=<prefix>
                     HDF5_PREFIX="$withval"
                     HDF5_LDFLAGS="-L$withval/lib"
                     HDF5_CFLAGS="-I$withval/include"
                     want_hdf5="yes"
                fi
        fi
])

if test "x$want_hdf5" = xyes; then
CFLAGS_SAVE="$CFLAGS"
LDFLAGS_SAVE="$LDFLAGS"
LIBS_SAVE="$LIBS"

CFLAGS="$CFLAGS $HDF5_CFLAGS"
LDFLAGS="$LDFLAGS $HDF5_LDFLAGS"

        AC_SEARCH_LIBS(H5Fopen,hdf5,
                [
                 HDF5_LIBS="-lhdf5"
                 have_hdf5="yes"
                 AC_DEFINE(HAVE_HDF5)
                ],
                [
                 have_hdf5="no"
                 HDF5_PREFIX=""
                 HDF5_LDFLAGS=""
                 HDF5_CFLAGS=""
                 HDF5_LIBS=""
                 ]
        )

CFLAGS="$CFLAGS_SAVE"
LDFLAGS="$LDFLAGS_SAVE"
LIBS="$LIBS_SAVE"
fi

AC_SUBST(HDF5_LIBS)
AC_SUBST(HDF5_CFLAGS)
AC_SUBST(HDF5_LDFLAGS)




dnl ------------- PNG -----------


PNG_PREFIX=""
PNG_LDFLAGS=""
PNG_CFLAGS=""

want_png="yes"
have_png="no"

AC_ARG_WITH(png,
[  --with-png=<path>       Enable PNG support],
[
        if test "x$withval" = xno; then
                # --without-png
                want_png="no"
        else
                if test "x$withval" = xyes; then
                     # --with-png specified, no argument; 
                     # default behaviour anyway.
                     want_png="yes"
                else
                     # --with-png=<prefix>
                     PNG_PREFIX="$withval"
                     PNG_LDFLAGS="-L$withval/lib"
                     PNG_CFLAGS="-I$withval/include"
                     want_png="yes"
                fi
        fi
])

if test "x$want_png" = xyes; then
CFLAGS_SAVE="$CFLAGS"
LDFLAGS_SAVE="$LDFLAGS"
LIBS_SAVE="$LIBS"

CFLAGS="$CFLAGS $PNG_CFLAGS"
LDFLAGS="$LDFLAGS $PNG_LDFLAGS"

        AC_SEARCH_LIBS(png_sig_cmp,png,
                [
                 PNG_LIBS="-lpng"
                 have_png="yes"
                 AC_DEFINE(HAVE_PNG)
                ],
                [
                 have_png="no"
                 PNG_PREFIX=""
                 PNG_LDFLAGS=""
                 PNG_CFLAGS=""
                 PNG_LIBS=""
                 ]
        )

CFLAGS="$CFLAGS_SAVE"
LDFLAGS="$LDFLAGS_SAVE"
LIBS="$LIBS_SAVE"
fi

AC_SUBST(PNG_LIBS)
AC_SUBST(PNG_CFLAGS)
AC_SUBST(PNG_LDFLAGS)


dnl ------------- GLUT -----------


GLUT_PREFIX=""
GLUT_LDFLAGS=""
GLUT_CFLAGS=""
want_glut="yes"
have_glut="no"

AC_ARG_WITH(glut,
[  --with-glut=<path>       Enable GLUT support],
[
        if test "x$withval" = xno; then
                # --without-glut
                want_glut="no"
        else
                if test "x$withval" = xyes; then
                        # --with-glut specified, no argument; 
                        # default behaviour anyway.
                        want_glut="yes"
                else
                        # --with-glut=<prefix>
                        GLUT_PREFIX="$withval"
                        GLUT_LDFLAGS="-L$withval/lib"
                        GLUT_CFLAGS="-I$withval/include"
                        want_glut="yes"
                fi
        fi
])

if test "x$want_glut" = xyes; then
CFLAGS_SAVE="$CFLAGS"
LDFLAGS_SAVE="$LDFLAGS"


    if test "x$DARWIN" = xyes; then
                    GLUT_CFLAGS="-framework OpenGL"
                    GLUT_CFLAGS="$GLUT_CFLAGS -framework GLUT"
                    GLUT_CFLAGS="$GLUT_CFLAGS -framework Foundation"
                    GLUT_LDFLAGS=""

        CFLAGS="$CFLAGS $GLUT_CFLAGS"
        LDFLAGS="$LDFLAGS $GLUT_LDFLAGS"

        # Unix underpinnings my arse.

                AC_CHECK_FUNC(glutInit,
                    [
                     have_glut="yes"
                     AC_DEFINE(HAVE_GLUT)
                    ],
                    [
                     have_glut="no"
                         GLUT_PREFIX=""
                         GLUT_LDFLAGS=""
                         GLUT_CFLAGS=""
                         GLUT_LIBS=""
                    ],
                )

        CFLAGS="$CFLAGS_SAVE"
        LDFLAGS="$LDFLAGS_SAVE"
    else

        CFLAGS="$CFLAGS $GLUT_CFLAGS"
        LDFLAGS="$LDFLAGS $GLUT_LDFLAGS"

                AC_CHECK_LIB(glut,glutInit,
                        [
                         GLUT_LIBS="-lglut"
                         have_glut="yes"
                         AC_DEFINE(HAVE_GLUT)
                        ],
                        [
                         have_glut="no"
                         GLUT_PREFIX=""
                         GLUT_LDFLAGS=""
                         GLUT_CFLAGS=""
                         GLUT_LIBS=""
                         ],
                         [-lGL -lGLU -lX11 -lXmu -lm]
                )

        CFLAGS="$CFLAGS_SAVE"
        LDFLAGS="$LDFLAGS_SAVE"
    fi
fi
AC_SUBST(GLUT_LIBS)
AC_SUBST(GLUT_CFLAGS)
AC_SUBST(GLUT_LDFLAGS)

dnl Composite rules

COMPILE_GI=""
COMPILE_VR=""
if test "x$have_glut" = xyes; then
        COMPILE_GI="gi quantize"
        COMPILE_VR="vr"
fi
AC_SUBST(COMPILE_GI)
AC_SUBST(COMPILE_VR)

COMPILE_PNGFFT=""
if test "x$have_fftw" = xyes; then
        if test "x$have_png" = xyes; then
                COMPILE_PNGFFT=pngfft
        fi
fi
AC_SUBST(COMPILE_PNGFFT)

COMPILE_2DSF=""
if test "x$have_fftw" = xyes; then
        COMPILE_2DSF=2dsf
fi
AC_SUBST(COMPILE_2DSF)


dnl Finished configuration testing; summarize setup.

minimal_set="yes"
echo "Enabled the following features:"
if test "x$have_fftw" = xyes; then
        echo "  FFTW support"
        minimal_set="no"
fi
if test "x$have_hdf5" = xyes; then
        echo "  HDF5 support"
        minimal_set="no"
fi
if test "x$have_glut" = xyes; then
        echo "  GLUT support"
        minimal_set="no"
fi
if test "x$have_png" = xyes; then
        echo "  PNG support"
        minimal_set="no"
fi
if test "x$compile_gi" = xgi; then
        echo "  Isosurfacer"
        minimal_set="no"
fi
if test "x$cando_gcc_opt" = xyes; then
	echo "  GCC optimizations"
        minimal_set="no"
fi
if test "x$cando_irix_opt" = xyes; then
	echo "  IRIX cc optimizations"
        minimal_set="no"
fi

if test "x$minimal_set" = xyes; then
        echo "  None. Minimal functionality will be compiled."
fi


dnl Now build config files from .in templates.

AC_CONFIG_FILES([Makefile])
AC_OUTPUT
